@model FurnitureStore.ViewModels.ShopFormViewModel
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Shops", FormMethod.Post, new { onsubmit = "return submitForm(this)" }))
{
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Address.Id)
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(model => model.ShopName, new { @class = "control-label" })
        @Html.EditorFor(model => model.ShopName, new { htmlAttributes = new { @class = "form-control", @id = "shopName" } })
        @Html.ValidationMessageFor(model => model.ShopName)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.OwnerName, new { @class = "control-label" })
        @Html.EditorFor(model => model.OwnerName, new { htmlAttributes = new { @class = "form-control", @id = "ownerName" } })
        @Html.ValidationMessageFor(model => model.OwnerName)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label" })
        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @id = "phoneNumber" } })
        @Html.ValidationMessageFor(model => model.PhoneNumber)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @class = "control-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "email" } })
        @Html.ValidationMessageFor(model => model.Email)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.WebPageURL, new { @class = "control-label" })
        @Html.EditorFor(model => model.WebPageURL, new { htmlAttributes = new { @class = "form-control", @id = "webPageURL" } })
        @Html.ValidationMessageFor(model => model.WebPageURL)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PIB, new { @class = "control-label" })
        @Html.EditorFor(model => model.PIB, new { htmlAttributes = new { @class = "form-control", @id = "pib" } })
        @Html.ValidationMessageFor(model => model.PIB)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BZR, new { @class = "control-label" })
        @Html.EditorFor(model => model.BZR, new { htmlAttributes = new { @class = "form-control", @id = "bzr" } })
        @Html.ValidationMessageFor(model => model.BZR)
    </div>
    <hr />
    <h5>Adresa</h5>
    <div class="form-group">
        @Html.LabelFor(model => model.Address.StreetName, new { @class = "control-label" })
        @Html.EditorFor(model => model.Address.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "pib" } })
        @Html.ValidationMessageFor(model => model.Address.StreetName)
    </div>
    <div class="form-row">
        <div class="form-group col-md-2">
            @Html.LabelFor(model => model.Address.StreetNumber, new { @class = "control-label" })
            @Html.EditorFor(model => model.Address.StreetNumber, new { htmlAttributes = new { @class = "form-control", @id = "bzr" } })
            @Html.ValidationMessageFor(model => model.Address.StreetNumber)
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Address.ZipCode, new { @class = "control-label" })
            @Html.EditorFor(model => model.Address.ZipCode, new { htmlAttributes = new { @class = "form-control", @id = "zipCode" } })
            @Html.ValidationMessageFor(model => model.Address.ZipCode)
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Address.City, new { @class = "control-label" })
            @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control", @id = "streetName" } })
            @Html.ValidationMessageFor(model => model.Address.City)
        </div>
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-success" value="Sačuvaj" />
        <input type="reset" class="btn btn-outline-secondary" value="Poništi" />
    </div>
}